AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  Name:
    Type: String

  QueueUrl:
    Type: String

  QueueArn:
    Type: String

  StepFunctionArn:
    Type: String

Resources:

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Name}"
      RetentionInDays: 30

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref Name
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
          - Effect: Allow
            Action:
            - sqs:GetQueueUrl
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            Resource: !Ref QueueArn
          - Effect: Allow
            Action: states:StartExecution
            Resource: !Ref StepFunctionArn

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref Name
      Code: src/
      Environment:
        Variables:
          CONFIG: !Sub |-
            {
              "queue_url": "${QueueUrl}",
              "max_messages_to_process": 100,
              "max_messages_per_receive": 10,
              "wait_time_in_seconds": 0,
              "message": {
                "message_error_key": "MessageError",
                "step_function_arn": "${StepFunctionArn}"
              }
            }
      Handler: invoke.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python3.8
      Timeout: 120

  Schedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref Name
      ScheduleExpression: "rate(1 minute)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt Lambda.Arn
          Id: lambda

  EventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt Schedule.Arn
