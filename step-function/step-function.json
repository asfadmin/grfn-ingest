{
  "Comment": "A step function to control lambdas for GRFN Ingest",
  "StartAt": "Verify",
  "States": {
    "Verify": {
      "Type": "Task",
      "Resource": "${VerifyLambdaArn}",
      "Next": "Ingest",
      "ResultPath": "$.VerifyResults",
      "Retry": [
        {
          "ErrorEquals": [
            "INVALID_MESSAGE",
            "INVALID_METADATA"
          ],
          "MaxAttempts": 0
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ]
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Notify",
          "ResultPath": "$.Error"
        }
      ]
    },
    "Ingest": {
      "Type": "Task",
      "Resource": "${IngestLambdaArn}",
      "ResultPath": "$.IngestResults",
      "Next": "MetadataConstruction",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ]
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Notify",
          "ResultPath": "$.Error"
        }
      ]
    },
    "MetadataConstruction": {
      "Type": "Task",
      "Resource": "${MetadataConstructionLambdaArn}",
      "InputPath": "$.IngestResults",
      "ResultPath": "$.ConstructionResults",
      "Next": "MetadataToCMR",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ]
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Notify",
          "ResultPath": "$.Error"
        }
      ]
    },
    "MetadataToCMR": {
      "Type": "Task",
      "Resource": "${CmrActivity}",
      "TimeoutSeconds": 30,
      "InputPath": "$.ConstructionResults",
      "ResultPath": "$.CmrResults",
      "Next": "Notify",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "MaxAttempts": 7,
          "BackoffRate": 5.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Notify",
          "ResultPath": "$.Error"
        }
      ]
    },
    "Notify": {
      "Type": "Task",
      "Resource": "${NotifyLambdaArn}",
      "ResultPath": "$.NotifyResults",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ]
        }
      ],
      "Next": "Check_Status"
    },
    "Check_Status": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.NotifyResults.Status",
          "StringEquals": "success",
          "Next": "Success"
        }
      ],
      "Default": "Failure"
    },
    "Failure": {
      "Type": "Fail",
      "Error": "Ingest failed.",
      "Cause": "Ingest failed.  Inspect the 'Error' field of the Failure task's input for details."
    },
    "Success": {
      "Type": "Pass",
      "End": true
    }
  }
}
